/// ContactManifoldInfo 表示联系人流形（Contact Manifold）的信息。
/// 这个数据结构通常包含了在碰撞检测过程中发现的接触点的信息，以及两个碰撞体之间的碰撞信息。

///ContactManifoldInfo 可能包含以下属性：
///碰撞体信息：包括两个碰撞体的标识符、碰撞体的材料属性等信息。
///接触点信息：存储了所有的接触点，包括接触点的位置、法线、深度等信息。
///接触点数量：记录了接触点的数量。
///碰撞法线：表示碰撞的法线方向。
///碰撞深度：表示碰撞的深度，即两个碰撞体之间的最短距离。
///ContactManifoldInfo 数据结构用于在碰撞检测过程中存储接触点的信息，并在后续的碰撞解析过程中使用。通过存储和管理接触点的信息，能够准确地模拟物体之间的碰撞行为，包括碰撞点的位置、法线、深度等信息。


namespace RP3D
{
    public class ContactManifoldInfo
    {
        /// "potential contact points"（潜在接触点）的数量。
        /// 在碰撞检测过程中，物体之间可能存在许多潜在的接触点，但并不是所有这些点都会最终成为真正的接触点。
        /// 这个数量通常用于跟踪在碰撞检测过程中考虑的潜在接触点的数量。
        /// 潜在接触点的数量可能会受到多种因素的影响，包括物体的形状、位置、速度等。
        /// 在物理引擎中，通常会根据一些启发式规则或算法来确定哪些潜在接触点是最有可能成为真实接触点的。
        /// 这个数量可以帮助开发者了解在碰撞检测中系统正在考虑的潜在接触点的数量，从而对系统的性能和效率有一定的了解。
        /// 总之，这段注释提到了用于跟踪潜在接触点数量的属性，这对于理解碰撞检测过程中的性能和行为非常有帮助。
        public int nbPotentialContactPoints;
        
        /// 存储在 mPotentialContactPoints 数组中的接触点的索引。通常情况下，这些索引值用于跟踪在碰撞检测过程中发现的潜在接触点。
        /// 具体来说，这个属性存储了 mPotentialContactPoints 数组中接触点的索引值，这些接触点被认为是可能成为真实接触点的候选点。
        /// 索引值可以被用来访问 mPotentialContactPoints 数组中的特定接触点，以进一步分析其位置、法线等信息。
        /// 通过存储接触点的索引，可以更有效地管理接触点的数据，同时还可以跟踪哪些接触点是系统认为有潜力成为真实接触点的。
        /// 这对于优化碰撞检测算法、减少不必要的计算以及提高性能非常有用。
        public byte[] potentialContactPointsIndices;
        
        /// 重叠对的标识符（ID）。
        /// 重叠对是指两个碰撞形状之间的重叠关系，每个重叠对都有一个唯一的标识符用于在系统中进行区分和跟踪。
        /// 重叠对的标识符通常用于在碰撞检测和碰撞解析过程中唯一标识每个重叠对。
        /// 通过重叠对的标识符，可以在系统中快速地定位和访问特定的重叠对，并执行相应的碰撞检测和碰撞解析操作。
        /// 这个属性存储了重叠对的唯一标识符，用于在系统中唯一地标识和区分不同的重叠对。
        /// 通常情况下，重叠对的标识符是一个整数或者唯一的字符串，根据具体的实现和需求而定。
        public int pairId;

        public ContactManifoldInfo(int pairId)
        {
            this.nbPotentialContactPoints = 0;
            this.potentialContactPointsIndices = new byte[configuration.NB_MAX_CONTACT_POINTS_IN_POTENTIAL_MANIFOLD];
            this.pairId = pairId;
        }
    }
}